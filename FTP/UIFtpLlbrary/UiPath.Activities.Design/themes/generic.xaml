<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:adc="clr-namespace:FtpActivities.Design" xmlns:b="clr-namespace:System;assembly=mscorlib" xmlns:p="clr-namespace:System.Windows.Controls.Primitives;assembly=PresentationFramework" xmlns:sapv="clr-namespace:System.Activities.Presentation.View;assembly=System.Activities.Presentation" xmlns:pr="clr-namespace:FtpActivities.Design.Properties">
  <adc:ActivityDescriptionConverter x:Key="ActivityDescriptionConverter" />
  <Style x:Key="{x:Type adc:ActivityDecoratorControl}" TargetType="{x:Type adc:ActivityDecoratorControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type adc:ActivityDecoratorControl}">
          <Grid>
            <Grid>
              <Grid.Style>
                <Style>
                  <Setter Property="UIElement.Visibility" Value="Visible" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=ShowExpanded}" Value="true">
                      <Setter Property="UIElement.Visibility" Value="Collapsed" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Grid.Style>
              <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" TextBlock.FontStyle="Italic" TextBlock.Foreground="#FF6D6D6D">Double-click to view</TextBlock>
            </Grid>
            <Grid>
              <Grid.Style>
                <Style>
                  <Setter Property="UIElement.Visibility" Value="Visible" />
                  <Setter Property="FrameworkElement.MinWidth" Value="{Binding Source={x:Static pr:Resources.SimpleActivitiesWidth}, Mode=OneWay}" />
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=ShowExpanded}" Value="false">
                      <Setter Property="FrameworkElement.MinWidth" Value="{Binding Source={x:Static pr:Resources.CollapsedWidth}, Mode=OneWay}" />
                      <Setter Property="UIElement.Visibility" Value="Collapsed" />
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </Grid.Style>
              <ContentPresenter />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.ToolTip" Value="{Binding Path=ModelItem, Converter={StaticResource ActivityDescriptionConverter}, Mode=OneTime}" />
    <Style.Resources>
      <Style TargetType="{x:Type sapv:ExpressionTextBox}">
        <Setter Property="FrameworkElement.Height" Value="23" />
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch" />
        <Setter Property="sapv:ExpressionTextBox.MaxLines" Value="1" />
      </Style>
      <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FrameworkElement.Height" Value="23" />
      </Style>
      <Style BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="{x:Type Button}">
        <Setter Property="Control.BorderThickness" Value="1" />
        <Setter Property="Control.BorderBrush" Value="#FFD0D7E2" />
        <Setter Property="FrameworkElement.Height" Value="23" />
      </Style>
    </Style.Resources>
  </Style>
  <Style x:Key="NonEditableComboboxStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
    <Setter Property="TextElement.Foreground" Value="#FF000000" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.BorderBrush" Value="#FFD0D7E2" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.Background" Value="#FFFFFFFF" />
    <Setter Property="FrameworkElement.Height" Value="23" />
  </Style>
  <Style x:Key="MenuButtonStyle" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="{x:Type Button}">
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.BorderBrush" Value="#FFD0D7E2" />
    <Setter Property="Control.Background" Value="#FFECECEC" />
    <Setter Property="FrameworkElement.Width" Value="21" />
    <Setter Property="FrameworkElement.Height" Value="21" />
    <Setter Property="Control.Padding" Value="-4" />
    <Setter Property="UIElement.Opacity" Value="0.7" />
    <Setter Property="FrameworkElement.ToolTip" Value="Click to open options menu" />
    <Setter Property="ContentControl.ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <Rectangle Width="13" Height="13" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Rectangle.Fill>
              <DrawingBrush Viewbox="0,0,13,13" ViewboxUnits="Absolute" Stretch="Uniform">
                <DrawingBrush.Drawing>
                  <DrawingGroup>
                    <GeometryDrawing Brush="#FF505050" Geometry="M12.588252,1.5438316E-05L0.68025199,1.5438316E-05C0.45247738,1.5438316E-05 -1.5876544E-06,0.67403558 -1.5876544E-06,1.5000166 -1.5876544E-06,2.3235467 0.45247738,3.0000178 0.68025199,3.0000178L12.320418,3.0000178C12.548193,3.0000178 12.999998,2.3235467 12.999998,1.5000166 12.999998,0.67403558 12.548193,1.5438316E-05 12.320418,1.5438316E-05" />
                    <DrawingGroup>
                      <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,0,5" />
                      </DrawingGroup.Transform>
                      <GeometryDrawing Brush="#FF505050" Geometry="M12.588252,1.5438316E-05L0.68025199,1.5438316E-05C0.45247738,1.5438316E-05 -1.5876544E-06,0.67403558 -1.5876544E-06,1.5000166 -1.5876544E-06,2.3235467 0.45247738,3.0000178 0.68025199,3.0000178L12.320418,3.0000178C12.548193,3.0000178 12.999998,2.3235467 12.999998,1.5000166 12.999998,0.67403558 12.548193,1.5438316E-05 12.320418,1.5438316E-05" />
                    </DrawingGroup>
                    <DrawingGroup>
                      <DrawingGroup.Transform>
                        <MatrixTransform Matrix="1,0,0,1,0,10" />
                      </DrawingGroup.Transform>
                      <GeometryDrawing Brush="#FF505050" Geometry="M12.588252,1.5438316E-05L0.68025199,1.5438316E-05C0.45247738,1.5438316E-05 -1.5876544E-06,0.67403558 -1.5876544E-06,1.5000166 -1.5876544E-06,2.3235467 0.45247738,3.0000178 0.68025199,3.0000178L12.320418,3.0000178C12.548193,3.0000178 12.999998,2.3235467 12.999998,1.5000166 12.999998,0.67403558 12.548193,1.5438316E-05 12.320418,1.5438316E-05" />
                    </DrawingGroup>
                  </DrawingGroup>
                </DrawingBrush.Drawing>
              </DrawingBrush>
            </Rectangle.Fill>
          </Rectangle>
        </DataTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="True">
        <Setter Property="UIElement.Opacity" Value="1" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="MenuSeparatorStyle" TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Static MenuItem.SeparatorStyleKey}}">
    <Setter Property="FrameworkElement.Margin" Value="35,2,0,2" />
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Height="1" SnapsToDevicePixels="True" BorderBrush="#FFBEC3CB" BorderThickness="0,0,0,1" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="UIElement.SnapsToDevicePixels">
      <Setter.Value>
        <b:Boolean>True</b:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.Height">
      <Setter.Value>
        <b:Double>1</b:Double>
      </Setter.Value>
    </Setter>
    <Setter Property="UIElement.Focusable" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Grid Background="#FFBEC3CB" Height="1" SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
    <Setter Property="FrameworkElement.OverridesDefaultStyle">
      <Setter.Value>
        <b:Boolean>True</b:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="UIElement.SnapsToDevicePixels">
      <Setter.Value>
        <b:Boolean>True</b:Boolean>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border BorderThickness="0,0,0,1" BorderBrush="#FFBEC3CB">
            <Border.Background>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="##FFBEC3CB" Offset="0" />
                  <GradientStop Color="##FFBEC3CB" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Border.Background>
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
    <Style.Triggers>
      <Trigger Property="MenuItem.Role">
        <Setter Property="Control.Template" Value="{DynamicResource ResourceKey={ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=TopLevelHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role">
        <Setter Property="Control.Template" Value="{DynamicResource ResourceKey={ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=TopLevelItemTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role">
        <Setter Property="Control.Template" Value="{DynamicResource ResourceKey={ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=SubmenuHeaderTemplateKey}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role">
        <Setter Property="Control.Template" Value="{DynamicResource ResourceKey={ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=SubmenuItemTemplateKey}}" />
      </Trigger>
    </Style.Triggers>
    <Style.Resources>
      <ResourceDictionary />
    </Style.Resources>
  </Style>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border Name="Border">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" MinWidth="17" SharedSizeGroup="Icon" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
          <ColumnDefinition Width="13" />
        </Grid.ColumnDefinitions>
        <Border Name="selection" BorderThickness="1,1,1,1" Padding="3,3,3,3" CornerRadius="2,2,2,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Margin="1,1,1,1" x:Uid="Border_4" Visibility="Hidden" Grid.Column="0" Grid.ColumnSpan="6" />
        <ContentPresenter Name="Icon" Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" Margin="6,0,6,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
        <ContentPresenter Name="HeaderHost" RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentSource="Header" Margin="0,4,0,4" TextElement.Foreground="#FF000000" Grid.Column="1" />
        <TextBlock Name="InputGestureText" Text="{TemplateBinding MenuItem.InputGestureText}" TextBlock.Foreground="#FF000000" Margin="5,2,2,2" Grid.Column="2" />
        <Path Name="Arrow" Data="M0,0L0,7 4,3.5z" Fill="#FF4971AA" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" />
        <p:Popup Name="Popup" IsOpen="{TemplateBinding MenuItem.IsSubmenuOpen}" Placement="Right" HorizontalOffset="0" PopupAnimation="Fade" AllowsTransparency="True" Focusable="False">
          <Border Name="SubmenuBorder" BorderThickness="1,1,1,1" BorderBrush="#FF9ABAE6" SnapsToDevicePixels="True">
            <Border.Background>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#FFDDE2E8" Offset="0" />
                  <GradientStop Color="#FFDFE9F6" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Border.Background>
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </p:Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="{x:Static Member=Visibility.Hidden}" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted">
        <Setter TargetName="selection" Property="UIElement.Visibility" Value="{x:Static Member=Visibility.Visible}" />
        <Setter TargetName="selection" Property="Panel.Background">
          <Setter.Value>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FFFFFCF4" Offset="0" />
                <GradientStop Color="#FFFFF3CD" Offset="0.49" />
                <GradientStop Color="#FFFFECB5" Offset="0.5" />
                <GradientStop Color="#FFFFECB5" Offset="1" />
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="selection" Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>#FFE5C365</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="HeaderHost" Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="InputGestureText" Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="Arrow" Property="Shape.Fill">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <b:Boolean>True</b:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger SourceName="Popup" Property="Window.AllowsTransparency">
        <Setter TargetName="SubmenuBorder" Property="Border.CornerRadius">
          <Setter.Value>
            <CornerRadius>4,4,4,4</CornerRadius>
          </Setter.Value>
        </Setter>
        <Setter TargetName="SubmenuBorder" Property="Border.Padding">
          <Setter.Value>
            <Thickness>0,3,0,3</Thickness>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <b:Boolean>True</b:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled">
        <Setter TargetName="HeaderHost" Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="InputGestureText" Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <b:Boolean>False</b:Boolean>
        </Trigger.Value>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border Name="Border">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" MinWidth="17" SharedSizeGroup="Icon" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
          <ColumnDefinition Width="13" />
        </Grid.ColumnDefinitions>
        <Border Name="selection" BorderThickness="1,1,1,1" Padding="3,3,3,3" CornerRadius="2,2,2,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Margin="1,1,1,1" x:Uid="Border_4" Visibility="Hidden" Grid.Column="0" Grid.ColumnSpan="6" />
        <ContentPresenter Name="Icon" Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" Margin="6,4,6,4" HorizontalAlignment="Center" VerticalAlignment="Center" />
        <Path Name="CheckMark" Data="M0,2L0,4.8 2.5,7.4 7.1,2.8 7.1,0 2.5,4.6z" Fill="#FF4971AA" FlowDirection="LeftToRight" Margin="4,0,6,0" VerticalAlignment="Center" Visibility="Hidden" SnapsToDevicePixels="False" />
        <ContentPresenter Name="HeaderHost" RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentSource="Header" Margin="0,4,0,4" TextElement.Foreground="#FF000000" Grid.Column="1" />
        <TextBlock Name="InputGestureText" Text="{TemplateBinding MenuItem.InputGestureText}" TextBlock.Foreground="#FF000000" Margin="5,4,0,4" DockPanel.Dock="Right" Grid.Column="2" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="{x:Static Member=Visibility.Hidden}" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked">
        <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="{x:Static Member=Visibility.Visible}" />
        <Trigger.Value>
          <b:Boolean>True</b:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="MenuItem.IsCheckable">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="{x:Static Member=Visibility.Hidden}" />
        <Trigger.Value>
          <b:Boolean>True</b:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted">
        <Setter TargetName="selection" Property="UIElement.Visibility" Value="{x:Static Member=Visibility.Visible}" />
        <Setter TargetName="selection" Property="Panel.Background">
          <Setter.Value>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FFFFFCF4" Offset="0" />
                <GradientStop Color="#FFFFF3CD" Offset="0.49" />
                <GradientStop Color="#FFFFECB5" Offset="0.5" />
                <GradientStop Color="#FFFFECB5" Offset="1" />
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="selection" Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>#FFE5C365</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="HeaderHost" Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="InputGestureText" Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <b:Boolean>True</b:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled">
        <Setter TargetName="HeaderHost" Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="InputGestureText" Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <b:Boolean>False</b:Boolean>
        </Trigger.Value>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border Name="Border">
      <Grid>
        <Border Name="selection" BorderThickness="1,1,1,1" Padding="3,3,3,3" CornerRadius="2,2,2,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Margin="1,1,1,1" x:Uid="Border_4" Visibility="Hidden" Grid.Column="0" Grid.ColumnSpan="6" />
        <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentSource="Header" Margin="8,4,8,4" />
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsHighlighted">
        <Setter TargetName="selection" Property="UIElement.Visibility" Value="{x:Static Member=Visibility.Visible}" />
        <Setter TargetName="selection" Property="Panel.Background">
          <Setter.Value>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FFFFFCF4" Offset="0" />
                <GradientStop Color="#FFFFF3CD" Offset="0.49" />
                <GradientStop Color="#FFFFECB5" Offset="0.5" />
                <GradientStop Color="#FFFFECB5" Offset="1" />
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="selection" Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>#FFE5C365</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="Border" Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <b:Boolean>True</b:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled">
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <b:Boolean>False</b:Boolean>
        </Trigger.Value>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly=MenuItem, ResourceId=TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
    <Border Name="Border">
      <Grid>
        <Border Name="selection" BorderThickness="1,1,1,1" Padding="3,3,3,3" CornerRadius="2,2,2,2" BorderBrush="#00FFFFFF" Background="#00FFFFFF" Margin="1,1,1,1" x:Uid="Border_4" Visibility="Hidden" Grid.Column="0" Grid.ColumnSpan="6" />
        <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentSource="Header" Margin="8,6,8,6" TextElement.Foreground="#FF000000" />
        <p:Popup Name="Popup" IsOpen="{TemplateBinding MenuItem.IsSubmenuOpen}" Placement="Bottom" HorizontalOffset="1" PopupAnimation="Fade" AllowsTransparency="True" Focusable="False">
          <Border Name="SubmenuBorder" BorderThickness="1,1,1,1" BorderBrush="#FF9ABAE6" SnapsToDevicePixels="True">
            <Border.Background>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <LinearGradientBrush.GradientStops>
                  <GradientStop Color="#FFDDE2E8" Offset="0" />
                  <GradientStop Color="#FFDFE9F6" Offset="1" />
                </LinearGradientBrush.GradientStops>
              </LinearGradientBrush>
            </Border.Background>
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </p:Popup>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation">
        <Setter TargetName="Popup" Property="p:Popup.PopupAnimation" Value="{x:Static Member=PopupAnimation.None}" />
        <Trigger.Value>
          <b:Boolean>True</b:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted">
        <Setter TargetName="selection" Property="UIElement.Visibility" Value="{x:Static Member=Visibility.Visible}" />
        <Setter TargetName="selection" Property="Panel.Background">
          <Setter.Value>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
              <LinearGradientBrush.GradientStops>
                <GradientStop Color="#FFFFFCF4" Offset="0" />
                <GradientStop Color="#FFFFF3CD" Offset="0.49" />
                <GradientStop Color="#FFFFECB5" Offset="0.5" />
                <GradientStop Color="#FFFFECB5" Offset="1" />
              </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="selection" Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>#FFE5C365</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Setter TargetName="Border" Property="Border.BorderBrush">
          <Setter.Value>
            <SolidColorBrush>#00FFFFFF</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <b:Boolean>True</b:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger SourceName="Popup" Property="Window.AllowsTransparency">
        <Setter TargetName="SubmenuBorder" Property="Border.CornerRadius">
          <Setter.Value>
            <CornerRadius>0,0,4,4</CornerRadius>
          </Setter.Value>
        </Setter>
        <Setter TargetName="SubmenuBorder" Property="Border.Padding">
          <Setter.Value>
            <Thickness>0,0,0,3</Thickness>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <b:Boolean>True</b:Boolean>
        </Trigger.Value>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled">
        <Setter Property="TextElement.Foreground">
          <Setter.Value>
            <SolidColorBrush>#FF000000</SolidColorBrush>
          </Setter.Value>
        </Setter>
        <Trigger.Value>
          <b:Boolean>False</b:Boolean>
        </Trigger.Value>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>